// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int             @id @default(autoincrement())
  name       String
  email      String          @unique
  password   String
  created_at DateTime        @default(now())
  updated_at DateTime        @default(now()) @updatedAt
  address    Address?        @relation(fields: [addressId], references: [id])
  posts      Post[]
  favorites  FavoritedPost[]
  Order      Order[]
  Cart       Cart[]
  addressId  Int?
}

model Post {
  id                 Int             @id @default(autoincrement())
  title              String
  description        String
  image              String
  location           String
  price              Float
  available_quantity Int
  user               User            @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id            Int
  favorited_posts    FavoritedPost[]
  order              Order[]
  category           PostCategory    @relation(fields: [category_id], references: [id])
  category_id        Int
}

model PostCategory {
  id    Int    @id @default(autoincrement())
  name  String
  posts Post[]
}

model Address {
  id       Int     @id @default(autoincrement())
  street   String
  city     String
  state    String
  number   String
  zip_code String
  Order    Order[]
  User     User[]
}

model FavoritedPost {
  id      Int  @id @default(autoincrement())
  user    User @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id Int
  post    Post @relation(fields: [post_id], references: [id], onDelete: Cascade)
  post_id Int
  Cart    Cart @relation(fields: [cart_id], references: [id])
  cart_id Int
}

model Order {
  id               Int     @id @default(autoincrement())
  total            Int
  user             User    @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id          Int
  post             Post    @relation(fields: [post_id], references: [id], onDelete: Cascade)
  post_id          Int
  address          Address @relation(fields: [order_address_id], references: [id])
  order_address_id Int
}

model Cart {
  id              Int             @id @default(autoincrement())
  user            User            @relation(fields: [user_id], references: [id])
  user_id         Int
  favorited_posts FavoritedPost[]
  quantity        Int
  created_at      DateTime        @default(now())
  modiefied_at    DateTime        @default(now()) @updatedAt
}
